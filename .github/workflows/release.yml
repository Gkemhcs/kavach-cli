name: Release

on:
  push:
    tags:
      - 'v*'
      - 'v*-alpha*'
      - 'v*-beta*'
      - 'v*-rc*'

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download latest release
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/Gkemhcs/kavach-cli/releases/latest | jq -r .tag_name)
          echo "Latest version: $LATEST_VERSION"
          
          # Download Linux binary
          wget "https://github.com/Gkemhcs/kavach-cli/releases/download/$LATEST_VERSION/kavach-cli_Linux_x86_64.tar.gz"
          tar -xzf kavach-cli_Linux_x86_64.tar.gz
          
          # Test the binary
          ./kavach version
          ./kavach --help

      - name: Test version command
        run: |
          VERSION_OUTPUT=$(./kavach version --short)
          echo "Version output: $VERSION_OUTPUT"
          
          # Verify version matches tag
          EXPECTED_VERSION=${GITHUB_REF#refs/tags/}
          if [[ "$VERSION_OUTPUT" == *"$EXPECTED_VERSION"* ]]; then
            echo "✅ Version matches expected: $EXPECTED_VERSION"
          else
            echo "❌ Version mismatch. Expected: $EXPECTED_VERSION, Got: $VERSION_OUTPUT"
            exit 1
          fi 
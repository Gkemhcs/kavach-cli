name: Snapshot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: build --snapshot --clean --parallelism 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-snapshot:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download snapshot
        run: |
          # Find the Linux x86_64 binary
          SNAPSHOT_FILE=$(find dist -name "kavach-linux-amd64" | head -1)
          if [ -n "$SNAPSHOT_FILE" ]; then
            cp "$SNAPSHOT_FILE" ./kavach
            chmod +x ./kavach
            echo "✅ Snapshot binary copied and made executable"
          else
            echo "❌ No snapshot binary found"
            echo "Available files in dist:"
            find dist -type f
            exit 1
          fi

      - name: Test snapshot binary
        run: |
          # Test the binary
          ./kavach version --short
          ./kavach --help
          
          # Verify it's a snapshot version
          VERSION_OUTPUT=$(./kavach version --short)
          if [[ "$VERSION_OUTPUT" == *"dev"* ]] || [[ "$VERSION_OUTPUT" == *"next"* ]]; then
            echo "✅ Snapshot version detected: $VERSION_OUTPUT"
          else
            echo "❌ Expected snapshot version, got: $VERSION_OUTPUT"
            exit 1
          fi 
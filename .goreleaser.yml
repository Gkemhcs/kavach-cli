# GoReleaser configuration for Kavach CLI
# This file configures how GoReleaser builds and releases the CLI
version: 2

# Project name and basic info
project_name: kavach-cli

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

# Build configuration
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    binary: kavach
    main: ./main.go
    ldflags:
      - -s -w
      - -X github.com/Gkemhcs/kavach-cli/internal/version.Version={{.Version}}
      - -X github.com/Gkemhcs/kavach-cli/internal/version.BuildTime={{.Date}}
      - -X github.com/Gkemhcs/kavach-cli/internal/version.GitCommit={{.Commit}}
      - -X github.com/Gkemhcs/kavach-cli/internal/version.GitBranch={{.Branch}}
    # macOS-specific optimizations
    overrides:
      - goos: darwin
        ldflags:
          - -s -w
          - -X github.com/Gkemhcs/kavach-cli/internal/version.Version={{.Version}}
          - -X github.com/Gkemhcs/kavach-cli/internal/version.BuildTime={{.Date}}
          - -X github.com/Gkemhcs/kavach-cli/internal/version.GitCommit={{.Commit}}
          - -X github.com/Gkemhcs/kavach-cli/internal/version.GitBranch={{.Branch}}
          - -buildmode=pie
        env:
          - CGO_ENABLED=0
          - GOOS=darwin

# Archive configuration
archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md

# Checksums configuration
checksum:
  name_template: 'checksums.txt'

# Snapshot configuration
snapshot:
  name_template: "{{ incpatch .Version }}-next"

# Changelog configuration
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - Merge pull request
      - Merge branch

# Release configuration
release:
  github:
    owner: Gkemhcs
    name: kavach-cli
  draft: false
  prerelease: auto

# Sign configuration using Cosign
signs:
  - cmd: cosign
    signature: "${artifact}.sig"
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - '--oidc-provider=github-actions'
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '--tlog-upload=true'
      - '--rekor-url=https://rekor.sigstore.dev'
      - '${artifact}'
      - --yes
    artifacts: all
    output: true 